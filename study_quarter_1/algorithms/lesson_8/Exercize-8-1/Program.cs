// Алгоритмы. Урок 8. Задание 1
// Вычислить ассимтотическую сложность алгоритма пирамидальной сортировки

using System;

namespace Exercize_8_1
{
    class Program
    {
        static void Main(string[] args)
        {
            static void HeapSort(int[] array)
            {
                // 1-ый этап - преобразование массива в кучу
                for (int i = 0; i < array.Length; i++) // каждый элемент массива                                  /// т.е O(N)
                {
                    // Помещаем в кучу т.е просматриваем бинарное дерево снизу до самого верха в худшем случае
                    // (высота бинарного дерева - log N)                                                          /// т.е O(log N)
                }

                // По 4-ому правилу, для первого этапа ассимпт. сложность определяется как O(N*logN)

                //////////////////////////////

                // 2-ой этап - завершение сортировки
                for (int i = array.Length - 1; i  > 0; i--) // для каждого узла кучи                             // т.е O(N)                    
                {
                    // Совершаем необходимые перестановки последнего элемента  кучи и корневого узла
                    // а затем передвигает новый корень вниз по дереву.
                    // (Высота дерева - log N)
                }

                // Т.е для второго этапа ассимпт. сложность определяется тоже как O(N*logN)

                // Окончательно - O(N*log N) + O(N*log N) = O(N*log N)
            }
        }
    }
}
